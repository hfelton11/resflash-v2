#!/bin/sh

# Subroutines for all resflash tools
# Copyright Brian Conway <bconway@rcesoftware.com>, see reslfash-PERMISSION for details

# Check whether -e is superfluous for handling escape characters
if [ $(echo "\n"|wc -l) -eq 2 ]; then
  ESCECHO=echo
else
  ESCECHO='echo -e'
fi

get_next_vnd() {
  nextvnd=$(vnconfig -l|grep 'not in use'|head -n 1|cut -d : -f 1)
}

umount_all() {
  sync

  for cleanupmnt in $(mount|tail -r|grep resflash|cut -d ' ' -f 3); do
    umount ${cleanupmnt}
  done

  for cleanupvnd in $(vnconfig -l|grep resflash|cut -d : -f 1); do
    vnconfig -u ${cleanupvnd}
  done
}

# Args: 1 - img or fs file
# Assigns: MNTPATH
mount_img_or_fs() {
  MNTPATH=$(mktemp -t -d resflash.XXXXXX)
  trap "umount_all; echo \*\*\* Error encountered. MNTPATH: ${MNTPATH} \*\*\*; \
  exit 1" ERR INT
  mkdir -p ${MNTPATH}/fs

  get_next_vnd
  mntvnd=${nextvnd}
  vnconfig ${mntvnd} ${1}

  case $(echo ${1}|awk -F . -safe '{ print $NF }') in
    img) mkdir -p ${MNTPATH}/mbr ${MNTPATH}/cfg
         mount -o async,noatime /dev/${mntvnd}a ${MNTPATH}/mbr
         mount -o async,noatime /dev/${mntvnd}d ${MNTPATH}/fs
         mount -o async,noatime /dev/${mntvnd}f ${MNTPATH}/cfg
         if disklabel ${mntvnd}|grep -q 'i:.*MSDOS'; then
           mkdir -p ${MNTPATH}/msdos
           mount -o async,noatime /dev/${mntvnd}i ${MNTPATH}/msdos
         fi;;
    fs) mount -o async,noatime /dev/${mntvnd}c ${MNTPATH}/fs;;
    *) echo '*** ERROR: Not a resflash img or fs file. ***'
       vnconfig -u ${mntvnd}
       exit 1;;
  esac

  mount -t mfs -o noatime,nodev,noexec,-s256M swap ${MNTPATH}/fs/tmp
}

# Args: 1 - MACHINE
# Assigns: ALG, DOS{PARTID,MNT,BOOTDIR,BOOTBINS,PARTMB}, FLAGPART, MBRPARTMB
set_attr_by_machine() {
  case ${1} in
    amd64) ALG=sha512
           DOSPARTID=EF
           DOSPARTMB=3
           FLAGPART=3
           DOSMNT=efi
           DOSBOOTDIR=efi/boot
           DOSBOOTBINS='BOOTX64.EFI BOOTIA32.EFI'
           MBRPARTMB=4;;
    i386) ALG=sha256
          DOSPARTID=EF
          DOSPARTMB=3
          FLAGPART=3
          DOSMNT=efi
          DOSBOOTDIR=
          DOSBOOTBINS=
          MBRPARTMB=4;;
    octeon) ALG=sha512
            DOSPARTID=0C
            DOSPARTMB=23
            FLAGPART=0
            DOSMNT=uboot
            DOSBOOTDIR=
            DOSBOOTBINS=
            MBRPARTMB=4;;
    *) echo 'Unsupported arch.'
       exit 1;;
  esac
}

